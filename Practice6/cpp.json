{"kind": "Listing", "data": {"modhash": "", "dist": 26, "children": [{"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "Rules For Individuals\n---------------------\n\n* **Don't** create top-level comments - those are for employers.\n* Feel free to reply to top-level comments with **on-topic** questions.\n* I will create one top-level comment for **meta** discussion.\n* *New!* I will create another top-level comment for **individuals looking for work**. (This is an experiment; if successful, it will be continued.)\n\nRules For Employers\n---------------------\n\n* You must be hiring **directly**. No third-party recruiters.\n* **One** top-level comment per employer. If you have multiple job openings, that's great, but please consolidate their descriptions or mention them in replies to your own top-level comment.\n* **Don't** use URL shorteners. [reddiquette](https://www.reddit.com/wiki/reddiquette) forbids them because they're opaque to the spam filter.\n* Templates are awesome. Please **use** the following template. As the \"formatting help\" says, use \\*\\*two stars\\*\\* to **bold text**. Use empty lines to separate sections.\n\n---\n\n\\*\\*Company:\\*\\* [Company name; also, use the \"formatting help\" to make it a link to your company's website, or a specific careers page if you have one]\n\n&amp;nbsp;\n\n\\*\\*Type:\\*\\* [Full time, part time, internship, contract, etc.]\n\n&amp;nbsp;\n\n\\*\\*Description:\\*\\* [What does your company do, and what are you hiring C++ devs for? How much experience are you looking for, and what seniority levels are you hiring for? The more details you provide, the better]\n\n&amp;nbsp;\n\n\\*\\*Location:\\*\\* [Where's your office - or if you're hiring at multiple offices, list them. If your workplace language isn't English, please specify it]\n\n&amp;nbsp;\n\n\\*\\*Remote:\\*\\* [Do you offer the option of working remotely?]\n\n&amp;nbsp;\n\n\\*\\*Visa Sponsorship:\\*\\* [Does your company sponsor visas?]\n\n&amp;nbsp;\n\n\\*\\*Technologies:\\*\\* [Required: do you mainly use C++98/03, C++11, C++14, C++17, or the C++20 working draft? Optional: do you use Linux/Mac/Windows, are there languages you use in addition to C++, are there technologies like OpenGL or libraries like Boost that you need/want/like experience with, etc.]\n\n&amp;nbsp;\n\n\\*\\*Contact:\\*\\* [How do you want to be contacted? Email, reddit PM, telepathy, gravitational waves?]\n\n---\n\nPrevious Post\n--------------\n\n* [Who's Hiring C++ Devs - Q4 2018](https://www.reddit.com/r/cpp/comments/9kig88/whos_hiring_c_devs_q4_2018/)", "author_fullname": "t2_21c1y", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "C++ Jobs - Q1 2019", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_abh8bm", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 169, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 169, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": "", "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1546338793.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;h2&gt;Rules For Individuals&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;Don&amp;#39;t&lt;/strong&gt; create top-level comments - those are for employers.&lt;/li&gt;\n&lt;li&gt;Feel free to reply to top-level comments with &lt;strong&gt;on-topic&lt;/strong&gt; questions.&lt;/li&gt;\n&lt;li&gt;I will create one top-level comment for &lt;strong&gt;meta&lt;/strong&gt; discussion.&lt;/li&gt;\n&lt;li&gt;&lt;em&gt;New!&lt;/em&gt; I will create another top-level comment for &lt;strong&gt;individuals looking for work&lt;/strong&gt;. (This is an experiment; if successful, it will be continued.)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Rules For Employers&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;You must be hiring &lt;strong&gt;directly&lt;/strong&gt;. No third-party recruiters.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;One&lt;/strong&gt; top-level comment per employer. If you have multiple job openings, that&amp;#39;s great, but please consolidate their descriptions or mention them in replies to your own top-level comment.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Don&amp;#39;t&lt;/strong&gt; use URL shorteners. &lt;a href=\"https://www.reddit.com/wiki/reddiquette\"&gt;reddiquette&lt;/a&gt; forbids them because they&amp;#39;re opaque to the spam filter.&lt;/li&gt;\n&lt;li&gt;Templates are awesome. Please &lt;strong&gt;use&lt;/strong&gt; the following template. As the &amp;quot;formatting help&amp;quot; says, use **two stars** to &lt;strong&gt;bold text&lt;/strong&gt;. Use empty lines to separate sections.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;hr/&gt;\n\n&lt;p&gt;**Company:** [Company name; also, use the &amp;quot;formatting help&amp;quot; to make it a link to your company&amp;#39;s website, or a specific careers page if you have one]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Type:** [Full time, part time, internship, contract, etc.]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Description:** [What does your company do, and what are you hiring C++ devs for? How much experience are you looking for, and what seniority levels are you hiring for? The more details you provide, the better]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Location:** [Where&amp;#39;s your office - or if you&amp;#39;re hiring at multiple offices, list them. If your workplace language isn&amp;#39;t English, please specify it]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Remote:** [Do you offer the option of working remotely?]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Visa Sponsorship:** [Does your company sponsor visas?]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Technologies:** [Required: do you mainly use C++98/03, C++11, C++14, C++17, or the C++20 working draft? Optional: do you use Linux/Mac/Windows, are there languages you use in addition to C++, are there technologies like OpenGL or libraries like Boost that you need/want/like experience with, etc.]&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp;&lt;/p&gt;\n\n&lt;p&gt;**Contact:** [How do you want to be contacted? Email, reddit PM, telepathy, gravitational waves?]&lt;/p&gt;\n\n&lt;hr/&gt;\n\n&lt;h2&gt;Previous Post&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;&lt;a href=\"https://www.reddit.com/r/cpp/comments/9kig88/whos_hiring_c_devs_q4_2018/\"&gt;Who&amp;#39;s Hiring C++ Devs - Q4 2018&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": "new", "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "MSVC STL Dev", "visited": false, "num_reports": null, "distinguished": "moderator", "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "abh8bm", "is_robot_indexable": true, "report_reasons": null, "author": "STL", "num_crossposts": 0, "num_comments": 122, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/cpp/comments/abh8bm/c_jobs_q1_2019/", "whitelist_status": "all_ads", "stickied": true, "url": "https://www.reddit.com/r/cpp/comments/abh8bm/c_jobs_q1_2019/", "subreddit_subscribers": 82178, "created_utc": 1546338793.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": " [https://codingtidbit.com/2019/04/01/c22-fullptr-to-replace-nullptr/](https://codingtidbit.com/2019/04/01/c22-fullptr-to-replace-nullptr/) ", "author_fullname": "t2_ofpjz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "C++23: fullptr to replace nullptr", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b7uvif", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 138, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 138, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1554078083.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&lt;a href=\"https://codingtidbit.com/2019/04/01/c22-fullptr-to-replace-nullptr/\"&gt;https://codingtidbit.com/2019/04/01/c22-fullptr-to-replace-nullptr/&lt;/a&gt; &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b7uvif", "is_robot_indexable": true, "report_reasons": null, "author": "shaovoon", "num_crossposts": 0, "num_comments": 58, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b7uvif/c23_fullptr_to_replace_nullptr/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/b7uvif/c23_fullptr_to_replace_nullptr/", "subreddit_subscribers": 82178, "created_utc": 1554078083.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_3gizzj7p", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What every programmer should know about memory? | must read for c/c++ folks", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b81p19", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 11, "domain": "people.freebsd.org", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 11, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1554121695.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b81p19", "is_robot_indexable": true, "report_reasons": null, "author": "Secreteus", "num_crossposts": 0, "num_comments": 5, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b81p19/what_every_programmer_should_know_about_memory/", "whitelist_status": "all_ads", "stickied": false, "url": "https://people.freebsd.org/~lstewart/articles/cpumemory.pdf", "subreddit_subscribers": 82178, "created_utc": 1554121695.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "Here's what I actually want to say:\n\n&gt; That avenue would be \"the best\" because there's a good chance that a (potential) committee member might see it and love it enough to champion it.\n\nBut that may be asking too much. It's an okay thing to do over on the C# language design repo on GitHub (for example), but the process for C++ seems a lot tighter.\n\nAnd I'm not a member and am very very unlikely to become one. The proposals also are usually not at a level that justifies formal submission (if there's even an avenue for that without a champion). Hence why I'm looking for a public, somewhat informal place to post such.\n\nThe closest thing I found, some discussion groups on Google Groups, are getting closed soon. And they don't seem to be specifically for language design discussion (had a lot of help questions and the like).\n\nThanks!", "author_fullname": "t2_g9m1w", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "What is the best avenue (if any) for a non-committee-member to make a library/language proposal (or comment on one)?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b81zt7", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 9, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 9, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1554123306.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Here&amp;#39;s what I actually want to say:&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;That avenue would be &amp;quot;the best&amp;quot; because there&amp;#39;s a good chance that a (potential) committee member might see it and love it enough to champion it.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;But that may be asking too much. It&amp;#39;s an okay thing to do over on the C# language design repo on GitHub (for example), but the process for C++ seems a lot tighter.&lt;/p&gt;\n\n&lt;p&gt;And I&amp;#39;m not a member and am very very unlikely to become one. The proposals also are usually not at a level that justifies formal submission (if there&amp;#39;s even an avenue for that without a champion). Hence why I&amp;#39;m looking for a public, somewhat informal place to post such.&lt;/p&gt;\n\n&lt;p&gt;The closest thing I found, some discussion groups on Google Groups, are getting closed soon. And they don&amp;#39;t seem to be specifically for language design discussion (had a lot of help questions and the like).&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b81zt7", "is_robot_indexable": true, "report_reasons": null, "author": "Enamex", "num_crossposts": 0, "num_comments": 6, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b81zt7/what_is_the_best_avenue_if_any_for_a/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/b81zt7/what_is_the_best_avenue_if_any_for_a/", "subreddit_subscribers": 82178, "created_utc": 1554123306.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_jxx65", "saved": false, "mod_reason_title": null, "gilded": 1, "clicked": false, "title": "Understanding C++ Modules: Part 2: export, import, visible, and reachable", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b7wx17", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 46, "domain": "vector-of-bool.github.io", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 46, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 1, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1554090401.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b7wx17", "is_robot_indexable": true, "report_reasons": null, "author": "d1ngal1ng", "num_crossposts": 0, "num_comments": 4, "send_replies": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b7wx17/understanding_c_modules_part_2_export_import/", "whitelist_status": "all_ads", "stickied": false, "url": "https://vector-of-bool.github.io/2019/03/31/modules-2.html", "subreddit_subscribers": 82178, "created_utc": 1554090401.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_izqjx", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "NFHTTP: A cross platform C++ HTTP library that interfaces natively to other platforms.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": true, "name": "t3_b83hnr", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 4, "domain": "github.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 4, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1554130827.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b83hnr", "is_robot_indexable": true, "report_reasons": null, "author": "alienviolet", "num_crossposts": 0, "num_comments": 0, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b83hnr/nfhttp_a_cross_platform_c_http_library_that/", "whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/spotify/NFHTTP", "subreddit_subscribers": 82178, "created_utc": 1554130827.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_77nu9", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Releasing a header-only, Abseil-derived hash table family.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b7ta2k", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 50, "domain": "github.com", "media_embed": {}, "author_flair_template_id": "7bf857c8-4dcc-11e6-b84d-0e5fbba92363", "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 50, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": "", "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1554069057.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "C++ Dev", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b7ta2k", "is_robot_indexable": true, "report_reasons": null, "author": "greg7mdp", "num_crossposts": 0, "num_comments": 16, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/cpp/comments/b7ta2k/releasing_a_headeronly_abseilderived_hash_table/", "whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/greg7mdp/parallel-hashmap", "subreddit_subscribers": 82178, "created_utc": 1554069057.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_3iknthrb", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Constexpr hash set [rough prototype]. Uses chaining to resolve collisions, O(1) amortised. Should be easily extendable to hash map.", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b7vczj", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 10, "domain": "godbolt.org", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 10, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1554080902.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b7vczj", "is_robot_indexable": true, "report_reasons": null, "author": "lennoxho", "num_crossposts": 0, "num_comments": 2, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b7vczj/constexpr_hash_set_rough_prototype_uses_chaining/", "whitelist_status": "all_ads", "stickied": false, "url": "https://godbolt.org/z/lQ1ns6", "subreddit_subscribers": 82178, "created_utc": 1554080902.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_aofyw", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "C++ April Fool's Quiz", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b7yisv", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 2, "domain": "bfilipek.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 2, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1554100637.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b7yisv", "is_robot_indexable": true, "report_reasons": null, "author": "joebaf", "num_crossposts": 0, "num_comments": 0, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b7yisv/c_april_fools_quiz/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.bfilipek.com/2019/04/cpp-april-quiz.html", "subreddit_subscribers": 82178, "created_utc": 1554100637.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_1lqdvgov", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Configuration-driven polymorphism", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b7p7es", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 21, "domain": "mklimenko.github.io", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 21, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1554047788.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b7p7es", "is_robot_indexable": true, "report_reasons": null, "author": "mklimenko", "num_crossposts": 0, "num_comments": 8, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b7p7es/configurationdriven_polymorphism/", "whitelist_status": "all_ads", "stickied": false, "url": "https://mklimenko.github.io/english/2019/03/31/configuration-driven-polymorphism/", "subreddit_subscribers": 82178, "created_utc": 1554047788.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_7pdbc", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "We need more C++ developers in Hollywood", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b7kux4", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 75, "domain": "reddit.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 75, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1554014600.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b7kux4", "is_robot_indexable": true, "report_reasons": null, "author": "ArashPartow", "num_crossposts": 0, "num_comments": 13, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b7kux4/we_need_more_c_developers_in_hollywood/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/americangods/comments/b7kuc9/is_there_supposed_to_be_timetravel_in_in_s02e04/", "subreddit_subscribers": 82178, "created_utc": 1554014600.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_117ljw", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "A special way to convert string&lt;-&gt;enum in C++ using X Macro technique and template specialization", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b7x0b5", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "domain": "github.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1554091012.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b7x0b5", "is_robot_indexable": true, "report_reasons": null, "author": "utilForever", "num_crossposts": 0, "num_comments": 7, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b7x0b5/a_special_way_to_convert_stringenum_in_c_using_x/", "whitelist_status": "all_ads", "stickied": false, "url": "https://github.com/utilForever/CubbyEnums", "subreddit_subscribers": 82178, "created_utc": 1554091012.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_36k9z", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Using libcurl effectively and safely in C++", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b7v64b", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "domain": "sheep.horse", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1554079777.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b7v64b", "is_robot_indexable": true, "report_reasons": null, "author": "AndrewStephens", "num_crossposts": 0, "num_comments": 2, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b7v64b/using_libcurl_effectively_and_safely_in_c/", "whitelist_status": "all_ads", "stickied": false, "url": "https://sheep.horse/2019/3/using_libcurl_effectively_and_safely_in_c%2B%2B.html", "subreddit_subscribers": 82178, "created_utc": 1554079777.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_2decspm2", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Side Panel in JUCE", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b7urnn", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "domain": "medium.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1554077530.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b7urnn", "is_robot_indexable": true, "report_reasons": null, "author": "qt_juce_qml_cpp17", "num_crossposts": 0, "num_comments": 0, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b7urnn/side_panel_in_juce/", "whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@asitdhal/side-panel-in-juce-bbafac5bb249", "subreddit_subscribers": 82178, "created_utc": 1554077530.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_12wh4o", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Translating ASN.1 BER Types to Modern C++", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b7ial2", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 28, "domain": "medium.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 28, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1553994580.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b7ial2", "is_robot_indexable": true, "report_reasons": null, "author": "uninformed_", "num_crossposts": 0, "num_comments": 1, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b7ial2/translating_asn1_ber_types_to_modern_c/", "whitelist_status": "all_ads", "stickied": false, "url": "https://medium.com/@samtyler6/translating-asn-1-ber-types-to-modern-c-226fb06d026f", "subreddit_subscribers": 82178, "created_utc": 1553994580.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "Setw() you miserable bitch.\n\nOk, had to get that out. Looking for some help with how to think about using setw(). My problem:\n\nWorking on a mock airline flight management program, and I've been devoting large amounts of time to the formatting of one of my printAll functions. Basically, it prints the FlightID, PlaneID, Origin, Destination, Start/End Times, etc, but I'm having trouble with making everything line up neatly because the headings are sometimes much smaller or larger than the values they are the header for.\n\n    FlightID  PlaneID  Origin  Destination    Takes Off          Lands  Passengers  Status\n    AA1607    CGTFO     DFW     MSP   03/27/19 19:34          03/27/19 19:34   132    ACTIVE\n\n\nI tried making every field 2,3,4,5,etc characters larger than the data it contained, but that didn't work all that well. Now I've just been staring at it and basically trying to guess what might work for each field, but I want a better process. I was hoping that there was some sort of a formula someone made that I haven't been able to find that says something like, \"If your heading is x characters and the value under it is y characters, then you should start trying setw values around z for the heading and w for the values.\" Just something that will get me in the ballpark of correct rather than trying to randomly guess numbers I think are correct.\n\nThanks!\n\nEDIT: Got it working, thanks all. Unfortunately I'm not able to use any of the more elegant solutions or libraries. I really don't understand why CS professors restrict students on things that aren't the point of the assignment. This particular assignment is on vectors, so I don't know why they don't want me using fmt or anything else like that when I'm sure I'd get strange looks at the least if I tried to do it this way in the industry.", "author_fullname": "t2_64hlz", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Cleanest looking formula/method for formatting unevenly named tables?", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b7f2ad", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 20, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 20, "approved_by": null, "thumbnail": "", "edited": 1553988406.0, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1553974511.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Setw() you miserable bitch.&lt;/p&gt;\n\n&lt;p&gt;Ok, had to get that out. Looking for some help with how to think about using setw(). My problem:&lt;/p&gt;\n\n&lt;p&gt;Working on a mock airline flight management program, and I&amp;#39;ve been devoting large amounts of time to the formatting of one of my printAll functions. Basically, it prints the FlightID, PlaneID, Origin, Destination, Start/End Times, etc, but I&amp;#39;m having trouble with making everything line up neatly because the headings are sometimes much smaller or larger than the values they are the header for.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;FlightID  PlaneID  Origin  Destination    Takes Off          Lands  Passengers  Status\nAA1607    CGTFO     DFW     MSP   03/27/19 19:34          03/27/19 19:34   132    ACTIVE\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I tried making every field 2,3,4,5,etc characters larger than the data it contained, but that didn&amp;#39;t work all that well. Now I&amp;#39;ve just been staring at it and basically trying to guess what might work for each field, but I want a better process. I was hoping that there was some sort of a formula someone made that I haven&amp;#39;t been able to find that says something like, &amp;quot;If your heading is x characters and the value under it is y characters, then you should start trying setw values around z for the heading and w for the values.&amp;quot; Just something that will get me in the ballpark of correct rather than trying to randomly guess numbers I think are correct.&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n\n&lt;p&gt;EDIT: Got it working, thanks all. Unfortunately I&amp;#39;m not able to use any of the more elegant solutions or libraries. I really don&amp;#39;t understand why CS professors restrict students on things that aren&amp;#39;t the point of the assignment. This particular assignment is on vectors, so I don&amp;#39;t know why they don&amp;#39;t want me using fmt or anything else like that when I&amp;#39;m sure I&amp;#39;d get strange looks at the least if I tried to do it this way in the industry.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b7f2ad", "is_robot_indexable": true, "report_reasons": null, "author": "0311", "num_crossposts": 0, "num_comments": 11, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b7f2ad/cleanest_looking_formulamethod_for_formatting/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/b7f2ad/cleanest_looking_formulamethod_for_formatting/", "subreddit_subscribers": 82178, "created_utc": 1553974511.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_giukr1d", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "GCovHTML - Generate reports on code coverage", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b756ov", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 27, "domain": "gitlab.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 27, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1553907512.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b756ov", "is_robot_indexable": true, "report_reasons": null, "author": "siplasma", "num_crossposts": 0, "num_comments": 4, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b756ov/gcovhtml_generate_reports_on_code_coverage/", "whitelist_status": "all_ads", "stickied": false, "url": "https://gitlab.com/stone.code/gcovhtml", "subreddit_subscribers": 82178, "created_utc": 1553907512.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "In the past, I wanted to do something like this:\n\n```\nstruct Vector3 {\n  union {\n    struct {\n      float x;\n      float y;\n      float z;\n    };\n    float v[3];\n  };\n};\n```\n\nIt worked well, I was quite happy until I noticed a warning of the compiler saying that this was an extension. More precisely, [the standard says](http://eel.is/c++draft/class.union.anon#1): \"[Note: Nested types, anonymous unions, and functions cannot be declared within an anonymous union. \u2014\u2009end note]\".\n\nMore recently, I wrote something like this:\n\n```\nenum class ShapeType {\n  Circle,\n  Rectangle,\n};\n\nstruct Shape {\n  ShapeType type;\n\n  union {\n    struct {\n      float radius;\n    } circle;\n    struct {\n      float width;\n      float height;\n    } rectangle;\n  };\n};\n```\n\nAgain, a warning. Note that the two examples differ a bit. In the latter, there is an unnamed `struct`, i.e. the type has no name, but the object has. In the former, there is an \"anonymous struct\", i.e. the type has no name and the object has no name (the standard use \"anonymous union\" with this same definition).\n\nAlso note that this code compiles fine on GCC, Clang and MSVC when extensions are active. So here we have a very good example of a feature that should be in the standard and that is not, with previous experience and implementation in many compilers. Why does it compile? Because, C11 introduced anonymous `struct`. Here is the definition (6.7.2.1): \"An unnamed member whose type specifier is a structure specifier with no tag is called an anonymous structure; an unnamed member whose type specifier is a union specifier with no tag is called an anonymous union. The members of an anonymous structure or union are considered to be members of the containing structure or union. This applies recursively if the containing structure or union is also anonymous.\"\n\nSo, here it comes. I would like to propose a paper to introduce anonymous structures and relax the constraints of what can be put inside an anonymous union so that these two snippets could be standard. I am not a native speaker, and this is the first time I write a paper. So I would like to find a mentor and/or a co-author for this task, someone with more experience in the process. Anyone interested?\n", "author_fullname": "t2_yi8yk", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Anonymous and unamed struct", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b6xtfu", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 40, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 40, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1553869011.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;In the past, I wanted to do something like this:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\nstruct Vector3 {\n  union {\n    struct {\n      float x;\n      float y;\n      float z;\n    };\n    float v[3];\n  };\n};\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;It worked well, I was quite happy until I noticed a warning of the compiler saying that this was an extension. More precisely, &lt;a href=\"http://eel.is/c++draft/class.union.anon#1\"&gt;the standard says&lt;/a&gt;: &amp;quot;[Note: Nested types, anonymous unions, and functions cannot be declared within an anonymous union. \u2014\u2009end note]&amp;quot;.&lt;/p&gt;\n\n&lt;p&gt;More recently, I wrote something like this:&lt;/p&gt;\n\n&lt;p&gt;```\nenum class ShapeType {\n  Circle,\n  Rectangle,\n};&lt;/p&gt;\n\n&lt;p&gt;struct Shape {\n  ShapeType type;&lt;/p&gt;\n\n&lt;p&gt;union {\n    struct {\n      float radius;\n    } circle;\n    struct {\n      float width;\n      float height;\n    } rectangle;\n  };\n};\n```&lt;/p&gt;\n\n&lt;p&gt;Again, a warning. Note that the two examples differ a bit. In the latter, there is an unnamed &lt;code&gt;struct&lt;/code&gt;, i.e. the type has no name, but the object has. In the former, there is an &amp;quot;anonymous struct&amp;quot;, i.e. the type has no name and the object has no name (the standard use &amp;quot;anonymous union&amp;quot; with this same definition).&lt;/p&gt;\n\n&lt;p&gt;Also note that this code compiles fine on GCC, Clang and MSVC when extensions are active. So here we have a very good example of a feature that should be in the standard and that is not, with previous experience and implementation in many compilers. Why does it compile? Because, C11 introduced anonymous &lt;code&gt;struct&lt;/code&gt;. Here is the definition (6.7.2.1): &amp;quot;An unnamed member whose type specifier is a structure specifier with no tag is called an anonymous structure; an unnamed member whose type specifier is a union specifier with no tag is called an anonymous union. The members of an anonymous structure or union are considered to be members of the containing structure or union. This applies recursively if the containing structure or union is also anonymous.&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;So, here it comes. I would like to propose a paper to introduce anonymous structures and relax the constraints of what can be put inside an anonymous union so that these two snippets could be standard. I am not a native speaker, and this is the first time I write a paper. So I would like to find a mentor and/or a co-author for this task, someone with more experience in the process. Anyone interested?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b6xtfu", "is_robot_indexable": true, "report_reasons": null, "author": "jube_dev", "num_crossposts": 0, "num_comments": 41, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b6xtfu/anonymous_and_unamed_struct/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/b6xtfu/anonymous_and_unamed_struct/", "subreddit_subscribers": 82178, "created_utc": 1553869011.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "Hey everyone!\n\nI am an Informatics masters student at Uppsala University in Sweden. My thesis currently deals with exploring reasons for the lack of adoption of unit of measurement (UoM) libraries and why that is the case in programming and scientific communities. I already interviewed quite a few developers and scientists and I got quite satisfactory answers, but I'm carrying out this survey to just get a more general intuition for this subject.\n\n&amp;#x200B;\n\nAbout more than  3000 UoM libraries exist on Github, on top of already established UoM libraries (such as C++ Boost Units) indicating a lack of standard, and disastrous errors show up time and time again proving that these errors are still costing stakeholders a ton of money.\n\n&amp;#x200B;\n\nIf you've ever used C++ Boost.Units or any other UoM library in any language (or have implemented your own custom solution), I would be super grateful if you could spare a moment of your time to fill out the following survey for me (which only takes 5-10 minutes at most).\n\nHere is the link to the questionnaire: [https://docs.google.com/forms/d/e/1FAIpQLSfGsH9qSllDPaM5qBuvcSISWNH4fwzl1Gkcf50IOT9F4kABUQ/viewform](https://docs.google.com/forms/d/e/1FAIpQLSfGsH9qSllDPaM5qBuvcSISWNH4fwzl1Gkcf50IOT9F4kABUQ/viewform).\n\n&amp;#x200B;\n\nFeel free to send me a message if you're interested on the nature of the study!\n\n&amp;#x200B;", "author_fullname": "t2_3jhfo65", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "C++ Boost.Units - Survey on Lack of Adoption of UoM libraries", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b6wsyy", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 26, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 26, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1553863475.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hey everyone!&lt;/p&gt;\n\n&lt;p&gt;I am an Informatics masters student at Uppsala University in Sweden. My thesis currently deals with exploring reasons for the lack of adoption of unit of measurement (UoM) libraries and why that is the case in programming and scientific communities. I already interviewed quite a few developers and scientists and I got quite satisfactory answers, but I&amp;#39;m carrying out this survey to just get a more general intuition for this subject.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;About more than  3000 UoM libraries exist on Github, on top of already established UoM libraries (such as C++ Boost Units) indicating a lack of standard, and disastrous errors show up time and time again proving that these errors are still costing stakeholders a ton of money.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;If you&amp;#39;ve ever used C++ Boost.Units or any other UoM library in any language (or have implemented your own custom solution), I would be super grateful if you could spare a moment of your time to fill out the following survey for me (which only takes 5-10 minutes at most).&lt;/p&gt;\n\n&lt;p&gt;Here is the link to the questionnaire: &lt;a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfGsH9qSllDPaM5qBuvcSISWNH4fwzl1Gkcf50IOT9F4kABUQ/viewform\"&gt;https://docs.google.com/forms/d/e/1FAIpQLSfGsH9qSllDPaM5qBuvcSISWNH4fwzl1Gkcf50IOT9F4kABUQ/viewform&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Feel free to send me a message if you&amp;#39;re interested on the nature of the study!&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b6wsyy", "is_robot_indexable": true, "report_reasons": null, "author": "Alfredius", "num_crossposts": 0, "num_comments": 14, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b6wsyy/c_boostunits_survey_on_lack_of_adoption_of_uom/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/b6wsyy/c_boostunits_survey_on_lack_of_adoption_of_uom/", "subreddit_subscribers": 82178, "created_utc": 1553863475.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "Hello community !\n\n&amp;#x200B;\n\nI allow myself to present you a free educational platform I am working on : [H.urna](https://hurna.io).  \n\nH.urna is a scientific and algorithmic visualization platform whose objective is to promote and facilitate access to the understanding of science.  Our goal is to \"awaken joy in creativity and knowledge\" (Albert Einstein)\n\n&amp;#x200B;\n\nI have two main C++ open source repositories : \n\n## Hurna Core C++ - [https://github.com/hurna/hurna-core](https://github.com/Hurna/Hurna-Core)\n\nH.urna Core C++ is a relatively small open source project that uses modern C++. It is implemented as a cross-platform, easy to build, full headed library containing some of the most known Algorithms and Data Structures. It is a caveat to develop under quality standards (all dependencies open-source and free to use).\n\n## Hurna Lib C++ (alpha version) - [https://github.com/hurna/hurna-lib](https://github.com/Hurna/Hurna-Lib)\n\nHurna Lib is an open source project that gives you the ability to easily transform your algorithms into visualizations and analysis that may be plug to [Hurna Explorer](https://demo.hurna.io). The idea is to wrap main objects to give them log capabilities, those logs are translated into a JSON file, then we can interpret the algorithms from any visualizers we would like to.\n\n&amp;#x200B;\n\nI would be very grateful if some of you have some advice, criticisms or else about the code.\n\n&amp;#x200B;\n\nThis is my first post on Reddit, thx for being cool if I misdone something.\n\nThank you very much.\n\nRegards.\n\n&amp;#x200B;\n\n&amp;#x200B;", "author_fullname": "t2_21wvwvrx", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Open Source projects for Algorithms Visualizations", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b6y3il", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 14, "domain": "self.cpp", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 14, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": true, "mod_note": null, "created": 1553870475.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello community !&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I allow myself to present you a free educational platform I am working on : &lt;a href=\"https://hurna.io\"&gt;H.urna&lt;/a&gt;.  &lt;/p&gt;\n\n&lt;p&gt;H.urna is a scientific and algorithmic visualization platform whose objective is to promote and facilitate access to the understanding of science.  Our goal is to &amp;quot;awaken joy in creativity and knowledge&amp;quot; (Albert Einstein)&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I have two main C++ open source repositories : &lt;/p&gt;\n\n&lt;h2&gt;Hurna Core C++ - &lt;a href=\"https://github.com/Hurna/Hurna-Core\"&gt;https://github.com/hurna/hurna-core&lt;/a&gt;&lt;/h2&gt;\n\n&lt;p&gt;H.urna Core C++ is a relatively small open source project that uses modern C++. It is implemented as a cross-platform, easy to build, full headed library containing some of the most known Algorithms and Data Structures. It is a caveat to develop under quality standards (all dependencies open-source and free to use).&lt;/p&gt;\n\n&lt;h2&gt;Hurna Lib C++ (alpha version) - &lt;a href=\"https://github.com/Hurna/Hurna-Lib\"&gt;https://github.com/hurna/hurna-lib&lt;/a&gt;&lt;/h2&gt;\n\n&lt;p&gt;Hurna Lib is an open source project that gives you the ability to easily transform your algorithms into visualizations and analysis that may be plug to &lt;a href=\"https://demo.hurna.io\"&gt;Hurna Explorer&lt;/a&gt;. The idea is to wrap main objects to give them log capabilities, those logs are translated into a JSON file, then we can interpret the algorithms from any visualizers we would like to.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I would be very grateful if some of you have some advice, criticisms or else about the code.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;This is my first post on Reddit, thx for being cool if I misdone something.&lt;/p&gt;\n\n&lt;p&gt;Thank you very much.&lt;/p&gt;\n\n&lt;p&gt;Regards.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b6y3il", "is_robot_indexable": true, "report_reasons": null, "author": "Hybesis", "num_crossposts": 0, "num_comments": 9, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b6y3il/open_source_projects_for_algorithms_visualizations/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.reddit.com/r/cpp/comments/b6y3il/open_source_projects_for_algorithms_visualizations/", "subreddit_subscribers": 82178, "created_utc": 1553870475.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_jxx65", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "The BooSTL Algorithms: Boost Algorithms That Extend the STL (1/3)", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b6r83s", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 55, "domain": "fluentcpp.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 55, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1553822660.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b6r83s", "is_robot_indexable": true, "report_reasons": null, "author": "d1ngal1ng", "num_crossposts": 0, "num_comments": 1, "send_replies": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b6r83s/the_boostl_algorithms_boost_algorithms_that/", "whitelist_status": "all_ads", "stickied": false, "url": "https://www.fluentcpp.com/2019/03/29/the-boostl-algorithms-boost-algorithms-that-extend-the-stl-1/", "subreddit_subscribers": 82178, "created_utc": 1553822660.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_7078y", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "CppCast: Reverse Engineering C++ with Gal Zaban", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b6sbrp", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": "", "subreddit_type": "public", "ups": 31, "domain": "cppcast.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 31, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": "", "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1553829493.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": "CppCast Host", "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b6sbrp", "is_robot_indexable": true, "report_reasons": null, "author": "tallassrob", "num_crossposts": 0, "num_comments": 0, "send_replies": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": "dark", "permalink": "/r/cpp/comments/b6sbrp/cppcast_reverse_engineering_c_with_gal_zaban/", "whitelist_status": "all_ads", "stickied": false, "url": "http://cppcast.com/2019/03/gal-zaban/", "subreddit_subscribers": 82178, "created_utc": 1553829493.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_496so", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "New CLion release (2019.1) bringing Embedded Development, Language Injections, ClangFormat integration, Memory View, Custom Themes and more...", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b6llmw", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 90, "domain": "blog.jetbrains.com", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 90, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1553793734.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b6llmw", "is_robot_indexable": true, "report_reasons": null, "author": "philsquared", "num_crossposts": 0, "num_comments": 51, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b6llmw/new_clion_release_20191_bringing_embedded/", "whitelist_status": "all_ads", "stickied": false, "url": "https://blog.jetbrains.com/clion/2019/03/clion-2019-1-embedded-dev-clangformat-memory-view/", "subreddit_subscribers": 82178, "created_utc": 1553793734.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_mz5a", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Machine code layout optimizations | Denis Bakhvalov", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b6m8uh", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 52, "domain": "dendibakh.github.io", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 52, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1553796909.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b6m8uh", "is_robot_indexable": true, "report_reasons": null, "author": "corysama", "num_crossposts": 0, "num_comments": 11, "send_replies": false, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b6m8uh/machine_code_layout_optimizations_denis_bakhvalov/", "whitelist_status": "all_ads", "stickied": false, "url": "https://dendibakh.github.io/blog/2019/03/27/Machine-code-layout-optimizatoins", "subreddit_subscribers": 82178, "created_utc": 1553796909.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_do2ok", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Forward-declaring STL container types", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b6kov5", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 54, "domain": "blog.magnum.graphics", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 54, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1553789370.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": false, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b6kov5", "is_robot_indexable": true, "report_reasons": null, "author": "czmosra", "num_crossposts": 0, "num_comments": 7, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b6kov5/forwarddeclaring_stl_container_types/", "whitelist_status": "all_ads", "stickied": false, "url": "https://blog.magnum.graphics/backstage/forward-declaring-stl-container-types/", "subreddit_subscribers": 82178, "created_utc": 1553789370.0, "media": null, "is_video": false}}, {"kind": "t3", "data": {"approved_at_utc": null, "subreddit": "cpp", "selftext": "", "author_fullname": "t2_qg459", "saved": false, "mod_reason_title": null, "gilded": 0, "clicked": false, "title": "Don\u2019t Use std::endl", "link_flair_richtext": [], "subreddit_name_prefixed": "r/cpp", "hidden": false, "pwls": 6, "link_flair_css_class": null, "downs": 0, "parent_whitelist_status": "all_ads", "hide_score": false, "name": "t3_b6xq8t", "quarantine": false, "link_flair_text_color": "dark", "author_flair_background_color": null, "subreddit_type": "public", "ups": 0, "domain": "accu.org", "media_embed": {}, "author_flair_template_id": null, "is_original_content": false, "user_reports": [], "secure_media": null, "is_reddit_media_domain": false, "is_meta": false, "category": null, "secure_media_embed": {}, "link_flair_text": null, "can_mod_post": false, "score": 0, "approved_by": null, "thumbnail": "", "edited": false, "author_flair_css_class": null, "author_flair_richtext": [], "gildings": {"gid_1": 0, "gid_2": 0, "gid_3": 0}, "content_categories": null, "is_self": false, "mod_note": null, "created": 1553868553.0, "link_flair_type": "text", "wls": 6, "banned_by": null, "author_flair_type": "text", "contest_mode": false, "selftext_html": null, "likes": null, "suggested_sort": null, "banned_at_utc": null, "view_count": null, "archived": false, "no_follow": true, "is_crosspostable": false, "pinned": false, "over_18": false, "media_only": false, "can_gild": false, "spoiler": false, "locked": false, "author_flair_text": null, "visited": false, "num_reports": null, "distinguished": null, "subreddit_id": "t5_2qi27", "mod_reason_by": null, "removal_reason": null, "link_flair_background_color": "", "id": "b6xq8t", "is_robot_indexable": true, "report_reasons": null, "author": "rafal_rr", "num_crossposts": 0, "num_comments": 26, "send_replies": true, "mod_reports": [], "author_patreon_flair": false, "author_flair_text_color": null, "permalink": "/r/cpp/comments/b6xq8t/dont_use_stdendl/", "whitelist_status": "all_ads", "stickied": false, "url": "https://accu.org/index.php/journals/2619", "subreddit_subscribers": 82178, "created_utc": 1553868553.0, "media": null, "is_video": false}}], "after": "t3_b6xq8t", "before": null}}
